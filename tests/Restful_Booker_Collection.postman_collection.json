{
	"info": {
		"_postman_id": "e1e36c17-9661-47a9-ba36-aa74988282f4",
		"name": "Restful_Booker_Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Health Check",
			"item": [
				{
					"name": "Ping the API",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9a52cee5-7399-49d7-b6e3-056779178c07",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", () => pm.response.to.have.status(201))",
									"",
									"pm.test('Content-Type header is correct', () => pm.response.to.have.header('Content-Type', 'text/plain; charset=utf-8'))"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "945042dc-1d26-4f1d-8505-61d928416bac",
								"type": "text/javascript",
								"exec": [
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/ping",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ping"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "fbbd986f-ad1d-4f4e-b402-18100283fd7e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2f5148e7-8c33-4074-a600-8831157c40f0",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 201\", () => pm.response.to.have.status(201))",
							""
						]
					}
				}
			]
		},
		{
			"name": "Get all Bookings",
			"item": [
				{
					"name": "Get all bookings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d436a72-c0cc-4fee-9f43-bd017d0d373f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/booking",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all bookings with all parameters",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/booking?firstname=sally&lastname=brown&checkin=2017-11-11&checkout=2017-11-15",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "firstname",
									"value": "sally"
								},
								{
									"key": "lastname",
									"value": "brown"
								},
								{
									"key": "checkin",
									"value": "2017-11-11"
								},
								{
									"key": "checkout",
									"value": "2017-11-15"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all bookings with the firstname and last name parameter",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/booking?firstname=sally&lastname=brown",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "firstname",
									"value": "sally"
								},
								{
									"key": "lastname",
									"value": "brown"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all bookings with the firstname  parameter",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9268b31-7153-4d71-afec-55bdd4da3716",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/booking?firstname=sally",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "firstname",
									"value": "sally"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all bookings with the lastname parameter",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/booking?lastname=brown",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "lastname",
									"value": "brown"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all bookings with the checkin parameter",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/booking?checkin=2017-11-11",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "checkin",
									"value": "2017-11-11"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all bookings with the checkout parameter",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/booking?checkout=2017-11-11",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "checkout",
									"value": "2017-11-11"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get a single booking",
			"item": [
				{
					"name": "Get a single booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2bc2659-9bfc-452d-9ee5-9783f27c6c49",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))",
									"",
									"pm.test('Content-Type header is correct', () => pm.response.to.have.header('Content-Type', 'application/json; charset=utf-8'))"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6c895279-c3c4-4366-bf00-b6a24803bb45",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/booking/1",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a single booking with XML header set",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/booking/1",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a single booking dynamically",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e8cda791-42de-4b88-8b15-669fea4204a1",
								"type": "text/javascript",
								"exec": [
									"pm.environment.set(\"booking_id\", Math.floor((Math.random() * 10) + 1))"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "54b4b504-e764-4748-b1b1-24aec8a507a5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))",
									"",
									"pm.environment.unset('booking_id')"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/booking/{{booking_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								"{{booking_id}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "bed71d80-d8ce-4cdb-8a88-29bf0e78c8d4",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "44406529-93e1-4cb2-9f9f-68d1caa5cc9e",
						"type": "text/javascript",
						"exec": [
							"if(pm.response.to.have.header('Content-Type') === 'application/json; charset=utf-8') {",
							"    pm.test(\"Response data format is correct\", () => {",
							"    var jsonData = pm.response.json()",
							"    pm.expect(jsonData.firstname).to.be.a('string')",
							"    pm.expect(jsonData.lastname).to.be.a('string')",
							"    pm.expect(jsonData.totalprice).to.a('number')",
							"    pm.expect(jsonData.depositpaid).to.be.a('boolean')",
							"    pm.expect(jsonData.bookingdates.checkin).to.be.a('string')",
							"    pm.expect(jsonData.bookingdates.checkin).to.match(/^\\d{4}-\\d{2}-\\d{2}$/)",
							"    pm.expect(jsonData.bookingdates.checkout).to.be.a('string')",
							"    pm.expect(jsonData.bookingdates.checkout).to.match(/^\\d{4}-\\d{2}-\\d{2}$/)",
							"});",
							"",
							"(pm.response.json().additionalneeds === undefined ? pm.test.skip : pm.test)('Customer has additional needs', () => {",
							"        pm.expect(pm.response.json().additionalneeds).to.be.a('string')",
							"});",
							"}",
							"",
							""
						]
					}
				}
			]
		},
		{
			"name": "Create a new booking",
			"item": [
				{
					"name": "Create a new booking with JSON",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5c5cbd2d-710e-4056-88c2-20225f973bf9",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "858da7f1-a936-4fa4-9eac-7e79f09586c3",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstname\" : \"Sally\",\n\t\"lastname\" : \"Brown\",\n\t\"totalprice\" : 111,\n\t\"depositpaid\" : true,\n\t\"additionalneeds\" : \"Breakfast\",\n\t\"bookingdates\" : {\n\t\t\"checkin\" : \"2013-02-23\",\n\t\t\"checkout\" : \"2014-10-23\"\n\t}\n}"
						},
						"url": {
							"raw": "{{baseURL}}/booking",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new booking with XML",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "eeb0b51e-2c47-4271-8399-7fd1cd934d72",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "43617033-fef8-4fae-9cef-6ddbcf0260d6",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml"
							},
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<booking>\r\n    <firstname>Sally</firstname>\r\n    <lastname>Brown</lastname>\r\n    <totalprice>111</totalprice>\r\n    <depositpaid>true</depositpaid>\r\n    <additionalneeds>Breakfast</additionalneeds>\r\n    <bookingdates>\r\n        <checkin>2013/02/23</checkin>\r\n        <checkout>2014/10/23</checkout>\r\n    </bookingdates>\r\n</booking>"
						},
						"url": {
							"raw": "{{baseURL}}/booking",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Dynamically create a new booking with JSON",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ebb2be51-3874-4771-866e-9e76bee42c85",
								"type": "text/javascript",
								"exec": [
									"// This is sending a request to the randomuser API to get some names ",
									"pm.sendRequest(\"https://randomuser.me/api/\", (err, res) => {",
									"    var firstname = res.json().results[0].name.first",
									"    var lastname  = res.json().results[0].name.last",
									"    pm.environment.set(\"first_name\", JSON.stringify((_.capitalize(firstname))))",
									"    pm.environment.set(\"last_name\", JSON.stringify((_.capitalize(lastname))))",
									"})",
									"",
									"// This is setting a random number between 0 and a 1000 for the Total Price",
									"pm.environment.set(\"total_price\", _.random(0, 1000))",
									"",
									"// This is selected either True or False for the Desposit Paid property",
									"const depositPaid = [true, false]",
									"pm.environment.set(\"depositPaid\", _.shuffle(depositPaid)[0])",
									"",
									"// This is using momentjs to created a Check In and Out date in a specific format",
									"const moment = require('moment')",
									"pm.environment.set(\"check_in\", JSON.stringify(moment().format('YYYY-MM-DD')))",
									"pm.environment.set(\"check_out\", JSON.stringify(moment().add(_.random(1, 14), 'days').format('YYYY-MM-DD')))",
									"",
									"// This is selecting a random item from the list and adding this an an additional need",
									"const items = [\"None\", \"Breakfast\", \"Lunch\", \"Dinner\", \"Late Checkout\", \"Newspaper\", \"Extra Pillow\"]",
									"pm.environment.set(\"additional_needs\", JSON.stringify(_.shuffle(items)[0]))"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "34a00c54-ce1d-4a19-9ff4-59ffc06f5e39",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))",
									"",
									"function cleanup() {",
									"    const clean = ['first_name', 'last_name', 'total_price', 'depositPaid', 'check_in', 'check_out', 'additional_needs']",
									"    for(let i = 0; i < clean.length; ++i){",
									"        pm.environment.unset(clean[i])",
									"    }",
									"}",
									"cleanup()",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"firstname\" : {{first_name}},\r\n\t\"lastname\" : {{last_name}},\r\n\t\"totalprice\" : {{total_price}},\r\n\t\"depositpaid\" : {{depositPaid}},\r\n\t\"additionalneeds\" : {{additional_needs}},\r\n\t\"bookingdates\" : {\r\n\t\t\"checkin\" : {{check_in}},\r\n\t\t\"checkout\" : {{check_out}}\r\n\t}\r\n}"
						},
						"url": {
							"raw": "{{baseURL}}/booking",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Dynamically create a new booking with XML",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f4db6ba1-d350-4d89-a62b-97543a0886df",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest(\"https://randomuser.me/api/\", (err, res) => {",
									"    var firstname = res.json().results[0].name.first",
									"    var lastname  = res.json().results[0].name.last",
									"    pm.environment.set(\"first_name\", JSON.stringify((_.capitalize(firstname))))",
									"    pm.environment.set(\"last_name\", JSON.stringify((_.capitalize(lastname))))",
									"})",
									"",
									"pm.environment.set(\"total_price\", _.random(0, 1000))",
									"",
									"const depositPaid = [true, false]",
									"pm.environment.set(\"depositPaid\", _.shuffle(depositPaid)[0])",
									"",
									"const moment = require('moment')",
									"pm.environment.set(\"check_in\", JSON.stringify(moment().format('YYYY-MM-DD')))",
									"pm.environment.set(\"check_out\", JSON.stringify(moment().add(_.random(1, 14), 'days').format('YYYY-MM-DD')))",
									"",
									"const items = [\"None\", \"Breakfast\", \"Lunch\", \"Dinner\", \"Late Checkout\", \"Newspaper\", \"Extra Pillow\"]",
									"pm.environment.set(\"additional_needs\", JSON.stringify(_.shuffle(items)[0]))"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "34a00c54-ce1d-4a19-9ff4-59ffc06f5e39",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))",
									"",
									"function cleanup() {",
									"    const clean = ['first_name', 'last_name', 'total_price', 'depositPaid', 'check_in', 'check_out', 'additional_needs']",
									"    for(let i = 0; i < clean.length; ++i){",
									"        pm.environment.unset(clean[i])",
									"    }",
									"}",
									"cleanup()",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml"
							},
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<booking>\r\n    <firstname>{{first_name}}</firstname>\r\n    <lastname>{{last_name}}</lastname>\r\n    <totalprice>{{total_price}}</totalprice>\r\n    <depositpaid>{{depositPaid}}</depositpaid>\r\n    <additionalneeds>{{additional_needs}}</additionalneeds>\r\n    <bookingdates>\r\n        <checkin>{{check_in}}</checkin>\r\n        <checkout>{{check_out}}</checkout>\r\n    </bookingdates>\r\n</booking>"
						},
						"url": {
							"raw": "{{baseURL}}/booking",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "dc3d0ab5-1b11-4abe-b203-7240dc6b3fd7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "3dfdde3a-f257-4fde-8b54-9301f0e4f6c8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}